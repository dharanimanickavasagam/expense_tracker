{"ast":null,"code":"import _defineProperty from \"/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/src/components/addExpense.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport Input from \"./common/input\";\nimport Select from \"./common/select\";\nimport Joi from \"joi-browser\";\nimport { connect } from \"react-redux\";\nimport TextArea from \"./common/textArea\";\nimport DateSelector from \"./common/date\";\nimport moment from \"moment\";\nimport { Card } from \"react-bootstrap\";\nimport Radio from \"./common/radio\";\nimport { addExpense } from \"../actions/expense\";\nimport { getExpenseType } from \"../actions/expenseType\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TypoGraphy from \"@material-ui/core/Typography\";\nimport _ from \"lodash\";\n\nclass AddExpense extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date: \"\",\n      name: \"\",\n      type: \"\",\n      expenseModes: [\"Fixed\", \"Variable\"],\n      mode: \"\",\n      amount: 0,\n      notes: \"\",\n      errors: {}\n    };\n    this.schema = {\n      date: Joi.date().required(),\n      name: Joi.string().min(5).required(),\n      type: Joi.string().required(),\n      mode: Joi.string().required(),\n      amount: Joi.number().required().min(1).max(1000)\n    };\n\n    this.componentDidMount = () => {\n      getExpenseType();\n    };\n\n    this.componentDidUpdate = prevProps => {\n      if (this.props.expenseTypes !== prevProps.expenseTypes) {\n        getExpenseType();\n      }\n    };\n\n    this.handleFocus = () => {\n      this.setState({\n        errors: {}\n      });\n    };\n\n    this.handleDate = date => {\n      this.setState({\n        date: moment(date).format(\"MM/DD/YYYY\")\n      });\n    };\n\n    this.handleExpenseName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleExpenseType = event => {\n      this.setState({\n        type: event.target.value\n      });\n    };\n\n    this.handleExpenseMode = event => {\n      this.setState({\n        mode: event.target.id\n      });\n    };\n\n    this.handleExpenseAmount = event => {\n      this.setState({\n        amount: event.target.value\n      });\n    };\n\n    this.handleExpenseNotes = event => {\n      this.setState({\n        notes: event.target.value\n      });\n    };\n\n    this.validateSchema = () => {\n      const options = {\n        abortEarly: false\n      };\n\n      const _Joi$validate = Joi.validate({\n        name: this.state.name,\n        type: this.state.type,\n        mode: this.state.mode,\n        amount: this.state.amount,\n        date: this.state.date\n      }, this.schema, options),\n            error = _Joi$validate.error;\n\n      if (!error) {\n        return;\n      }\n\n      const errors = _objectSpread({}, this.state.errors);\n\n      const validatedResult = error.details.map(errorDetails => {\n        const errorState = errorDetails.message.match(/\"(.*?)\"/);\n        errors[errorState[1]] = errorDetails.message;\n        this.setState({\n          errors\n        });\n        return errorDetails.message;\n      });\n      return validatedResult;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const errors = this.validateSchema();\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return;\n    };\n\n    this.handleAddExpense = () => {\n      const errors = this.validateSchema();\n\n      if (!errors) {\n        this.props.addExpense({\n          date: this.state.date,\n          name: this.state.name,\n          type: this.state.type,\n          mode: this.state.mode,\n          amount: this.state.amount,\n          notes: this.state.notes\n        });\n        this.handleClearData();\n      }\n    };\n\n    this.handleClearData = () => {\n      this.setState({\n        name: \"\",\n        type: \"\",\n        amount: 0,\n        mode: \"\",\n        date: \"\",\n        notes: \"\",\n        errors: {}\n      });\n    };\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      style: {\n        flexGrow: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      color: \"primary\",\n      position: \"static\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(TypoGraphy, {\n      variant: \"title\",\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Add Expense\"))), React.createElement(Card, {\n      className: \"flexContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Add Expense Drawer\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Track your expenses like a pro! You now have a way to find the recurring and variable expenses.\"), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(DateSelector, {\n      value: this.state.date,\n      labelFor: \"expenseDate\",\n      labelName: \"Date\",\n      inputId: \"expenseDate\",\n      error: errors,\n      onFocus: this.handleFocus,\n      onChange: this.handleDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.state.errors.date && _.values(this.state.errors.date))), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: this.state.name,\n      labelFor: \"expenseName\",\n      labelName: \"Expense Name\",\n      inputId: \"expenseName\",\n      type: \"text\",\n      onChange: this.handleExpenseName,\n      onFocus: this.handleFocus,\n      error: errors,\n      placeholder: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, this.state.errors.name && _.values(this.state.errors.name))), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: this.state.type,\n      labelFor: \"expenseType\",\n      labelName: \"Expense Type\",\n      selectId: \"expenseType\",\n      onChange: this.handleExpenseType,\n      onFocus: this.handleFocus,\n      options: this.props.expenseTypes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, this.state.errors.type && _.values(this.state.errors.type))), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      type: \"radio\",\n      value: this.state.mode,\n      labelFor: \"expenseMode\",\n      labelName: \"Expense Mode\",\n      inputId: \"expenseMode\",\n      onChange: this.handleExpenseMode,\n      onFocus: this.handleFocus,\n      options: this.state.expenseModes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, this.state.errors.mode && _.values(this.state.errors.mode))), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: this.state.amount,\n      onFocus: this.handleFocus,\n      labelFor: \"expenseAmount\",\n      labelName: \"Amount\",\n      inputId: \"expenseAmount\",\n      type: \"number\",\n      max: \"1000\",\n      min: \"1\",\n      step: \"0.5\",\n      onChange: this.handleExpenseAmount,\n      placeholder: \"$\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, this.state.errors.amount && _.values(this.state.errors.amount))), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      value: this.state.notes,\n      labelFor: \"expenseNote\",\n      labelName: \"Notes\",\n      inputId: \"expenseNote\",\n      onChange: this.handleExpenseNotes,\n      error: errors,\n      placeholder: \"Notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      style: {\n        marginTop: \"15px\",\n        marginLeft: \"15px\"\n      },\n      className: \"btn btn-primary\",\n      onClick: this.handleAddExpense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Add Expense\"), React.createElement(\"button\", {\n      style: {\n        marginTop: \"15px\",\n        marginLeft: \"15px\"\n      },\n      className: \"btn btn-primary\",\n      onClick: this.handleClearData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Clear\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const expenseTypes = state.expenseType.expenseTypes;\n  const filteredExpenseTypeNames = expenseTypes.map(expenseType => expenseType.name);\n  return {\n    expenseTypes: filteredExpenseTypeNames\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getExpenseType: dispatch(getExpenseType()),\n    addExpense: expense => dispatch(addExpense(expense))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddExpense);","map":{"version":3,"sources":["/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/src/components/addExpense.jsx"],"names":["React","Component","Input","Select","Joi","connect","TextArea","DateSelector","moment","Card","Radio","addExpense","getExpenseType","AppBar","Toolbar","TypoGraphy","_","AddExpense","state","date","name","type","expenseModes","mode","amount","notes","errors","schema","required","string","min","number","max","componentDidMount","componentDidUpdate","prevProps","props","expenseTypes","handleFocus","setState","handleDate","format","handleExpenseName","event","target","value","handleExpenseType","handleExpenseMode","id","handleExpenseAmount","handleExpenseNotes","validateSchema","options","abortEarly","validate","error","validatedResult","details","map","errorDetails","errorState","message","match","handleSubmit","preventDefault","handleAddExpense","handleClearData","render","flexGrow","color","values","marginTop","marginLeft","mapStateToProps","expenseType","filteredExpenseTypeNames","mapDispatchToProps","dispatch","expense"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Input from \"./common/input\";\nimport Select from \"./common/select\";\nimport Joi from \"joi-browser\";\nimport { connect } from \"react-redux\";\nimport TextArea from \"./common/textArea\";\nimport DateSelector from \"./common/date\";\nimport moment from \"moment\";\nimport { Card } from \"react-bootstrap\";\nimport Radio from \"./common/radio\";\nimport { addExpense } from \"../actions/expense\";\nimport { getExpenseType } from \"../actions/expenseType\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TypoGraphy from \"@material-ui/core/Typography\";\nimport _ from \"lodash\";\n\nclass AddExpense extends Component {\n\tstate = {\n\t\tdate: \"\",\n\t\tname: \"\",\n\t\ttype: \"\",\n\t\texpenseModes: [\"Fixed\", \"Variable\"],\n\t\tmode: \"\",\n\t\tamount: 0,\n\t\tnotes: \"\",\n\t\terrors: {}\n\t};\n\n\tschema = {\n\t\tdate: Joi.date().required(),\n\t\tname: Joi.string()\n\t\t\t.min(5)\n\t\t\t.required(),\n\t\ttype: Joi.string().required(),\n\t\tmode: Joi.string().required(),\n\t\tamount: Joi.number()\n\t\t\t.required()\n\t\t\t.min(1)\n\t\t\t.max(1000)\n\t};\n\n\tcomponentDidMount = () => {\n\t\tgetExpenseType();\n\t};\n\n\tcomponentDidUpdate = prevProps => {\n\t\tif (this.props.expenseTypes !== prevProps.expenseTypes) {\n\t\t\tgetExpenseType();\n\t\t}\n\t};\n\n\thandleFocus = () => {\n\t\tthis.setState({ errors: {} });\n\t};\n\thandleDate = date => {\n\t\tthis.setState({ date: moment(date).format(\"MM/DD/YYYY\") });\n\t};\n\n\thandleExpenseName = event => {\n\t\tthis.setState({ name: event.target.value });\n\t};\n\n\thandleExpenseType = event => {\n\t\tthis.setState({ type: event.target.value });\n\t};\n\n\thandleExpenseMode = event => {\n\t\tthis.setState({ mode: event.target.id });\n\t};\n\n\thandleExpenseAmount = event => {\n\t\tthis.setState({ amount: event.target.value });\n\t};\n\n\thandleExpenseNotes = event => {\n\t\tthis.setState({ notes: event.target.value });\n\t};\n\n\tvalidateSchema = () => {\n\t\tconst options = { abortEarly: false };\n\t\tconst { error } = Joi.validate(\n\t\t\t{\n\t\t\t\tname: this.state.name,\n\t\t\t\ttype: this.state.type,\n\t\t\t\tmode: this.state.mode,\n\t\t\t\tamount: this.state.amount,\n\t\t\t\tdate: this.state.date\n\t\t\t},\n\t\t\tthis.schema,\n\t\t\toptions\n\t\t);\n\n\t\tif (!error) {\n\t\t\treturn;\n\t\t}\n\t\tconst errors = { ...this.state.errors };\n\n\t\tconst validatedResult = error.details.map(errorDetails => {\n\t\t\tconst errorState = errorDetails.message.match(/\"(.*?)\"/);\n\t\t\terrors[errorState[1]] = errorDetails.message;\n\t\t\tthis.setState({ errors });\n\t\t\treturn errorDetails.message;\n\t\t});\n\t\treturn validatedResult;\n\t};\n\n\thandleSubmit = event => {\n\t\tevent.preventDefault();\n\t\tconst errors = this.validateSchema();\n\n\t\tthis.setState({ errors: errors || {} });\n\t\tif (errors) return;\n\t};\n\n\thandleAddExpense = () => {\n\t\tconst errors = this.validateSchema();\n\n\t\tif (!errors) {\n\t\t\tthis.props.addExpense({\n\t\t\t\tdate: this.state.date,\n\t\t\t\tname: this.state.name,\n\t\t\t\ttype: this.state.type,\n\t\t\t\tmode: this.state.mode,\n\t\t\t\tamount: this.state.amount,\n\t\t\t\tnotes: this.state.notes\n\t\t\t});\n\t\t\tthis.handleClearData();\n\t\t}\n\t};\n\n\thandleClearData = () => {\n\t\tthis.setState({\n\t\t\tname: \"\",\n\t\t\ttype: \"\",\n\t\t\tamount: 0,\n\t\t\tmode: \"\",\n\t\t\tdate: \"\",\n\t\t\tnotes: \"\",\n\n\t\t\terrors: {}\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { errors } = this.state;\n\n\t\treturn (\n\t\t\t<div style={{ flexGrow: 1 }}>\n\t\t\t\t<AppBar color=\"primary\" position=\"static\">\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<TypoGraphy variant=\"title\" color=\"inherit\">\n\t\t\t\t\t\t\tAdd Expense\n\t\t\t\t\t\t</TypoGraphy>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\n\t\t\t\t<Card className=\"flexContainer\">\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Card.Title>Add Expense Drawer</Card.Title>\n\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\tTrack your expenses like a pro! You now have a way to find the\n\t\t\t\t\t\t\trecurring and variable expenses.\n\t\t\t\t\t\t</Card.Text>\n\n\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t<DateSelector\n\t\t\t\t\t\t\t\tvalue={this.state.date}\n\t\t\t\t\t\t\t\tlabelFor=\"expenseDate\"\n\t\t\t\t\t\t\t\tlabelName=\"Date\"\n\t\t\t\t\t\t\t\tinputId=\"expenseDate\"\n\t\t\t\t\t\t\t\terror={errors}\n\t\t\t\t\t\t\t\tonFocus={this.handleFocus}\n\t\t\t\t\t\t\t\tonChange={this.handleDate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div style={{ color: \"red\" }}>\n\t\t\t\t\t\t\t\t{this.state.errors.date && _.values(this.state.errors.date)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card.Text>\n\n\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t\tlabelFor=\"expenseName\"\n\t\t\t\t\t\t\t\tlabelName=\"Expense Name\"\n\t\t\t\t\t\t\t\tinputId=\"expenseName\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tonChange={this.handleExpenseName}\n\t\t\t\t\t\t\t\tonFocus={this.handleFocus}\n\t\t\t\t\t\t\t\terror={errors}\n\t\t\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div style={{ color: \"red\" }}>\n\t\t\t\t\t\t\t\t{this.state.errors.name && _.values(this.state.errors.name)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card.Text>\n\n\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tvalue={this.state.type}\n\t\t\t\t\t\t\t\tlabelFor=\"expenseType\"\n\t\t\t\t\t\t\t\tlabelName=\"Expense Type\"\n\t\t\t\t\t\t\t\tselectId=\"expenseType\"\n\t\t\t\t\t\t\t\tonChange={this.handleExpenseType}\n\t\t\t\t\t\t\t\tonFocus={this.handleFocus}\n\t\t\t\t\t\t\t\toptions={this.props.expenseTypes}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div style={{ color: \"red\" }}>\n\t\t\t\t\t\t\t\t{this.state.errors.type && _.values(this.state.errors.type)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card.Text>\n\n\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tvalue={this.state.mode}\n\t\t\t\t\t\t\t\tlabelFor=\"expenseMode\"\n\t\t\t\t\t\t\t\tlabelName=\"Expense Mode\"\n\t\t\t\t\t\t\t\tinputId=\"expenseMode\"\n\t\t\t\t\t\t\t\tonChange={this.handleExpenseMode}\n\t\t\t\t\t\t\t\tonFocus={this.handleFocus}\n\t\t\t\t\t\t\t\toptions={this.state.expenseModes}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div style={{ color: \"red\" }}>\n\t\t\t\t\t\t\t\t{this.state.errors.mode && _.values(this.state.errors.mode)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card.Text>\n\n\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tvalue={this.state.amount}\n\t\t\t\t\t\t\t\tonFocus={this.handleFocus}\n\t\t\t\t\t\t\t\tlabelFor=\"expenseAmount\"\n\t\t\t\t\t\t\t\tlabelName=\"Amount\"\n\t\t\t\t\t\t\t\tinputId=\"expenseAmount\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tmax=\"1000\"\n\t\t\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\t\t\tstep=\"0.5\"\n\t\t\t\t\t\t\t\tonChange={this.handleExpenseAmount}\n\t\t\t\t\t\t\t\tplaceholder=\"$\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div style={{ color: \"red\" }}>\n\t\t\t\t\t\t\t\t{this.state.errors.amount && _.values(this.state.errors.amount)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card.Text>\n\n\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tvalue={this.state.notes}\n\t\t\t\t\t\t\t\tlabelFor=\"expenseNote\"\n\t\t\t\t\t\t\t\tlabelName=\"Notes\"\n\t\t\t\t\t\t\t\tinputId=\"expenseNote\"\n\t\t\t\t\t\t\t\tonChange={this.handleExpenseNotes}\n\t\t\t\t\t\t\t\terror={errors}\n\t\t\t\t\t\t\t\tplaceholder=\"Notes\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Card.Text>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tstyle={{ marginTop: \"15px\", marginLeft: \"15px\" }}\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\tonClick={this.handleAddExpense}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAdd Expense\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tstyle={{ marginTop: \"15px\", marginLeft: \"15px\" }}\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\tonClick={this.handleClearData}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tClear\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\tconst expenseTypes = state.expenseType.expenseTypes;\n\tconst filteredExpenseTypeNames = expenseTypes.map(\n\t\texpenseType => expenseType.name\n\t);\n\n\treturn {\n\t\texpenseTypes: filteredExpenseTypeNames\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tgetExpenseType: dispatch(getExpenseType()),\n\t\taddExpense: expense => dispatch(addExpense(expense))\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(AddExpense);\n"]},"metadata":{},"sourceType":"module"}