{"ast":null,"code":"var _jsxFileName = \"/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/src/components/chart/expenseMode.jsx\";\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\n\nconst styles = theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  }\n});\n\nclass ExpenseMode extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(React.Fragment, null, React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h6\",\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Expense Mode\"), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Fixed : $ \", this.props.totalFixedExpense)), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Variable : $ \", this.props.totalVariableExpense)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const stateExpense = state.expense.expenses;\n  let totalVariableExpense, totalFixedExpense;\n\n  if (stateExpense.length > 0) {\n    const variableExpense = stateExpense.filter(expense => expense.mode == \"Variable\");\n    const fixedExpense = stateExpense.filter(expense => expense.mode == \"Fixed\");\n    totalVariableExpense = variableExpense.reduce((acc, vex) => acc + vex.amount, 0);\n    totalFixedExpense = fixedExpense.reduce((acc, fex) => acc + fex.amount, 0);\n  }\n\n  return {\n    totalVariableExpense: totalVariableExpense,\n    totalFixedExpense: totalFixedExpense\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(ExpenseMode));","map":{"version":3,"sources":["/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/src/components/chart/expenseMode.jsx"],"names":["React","Component","Grid","Typography","Paper","withStyles","connect","styles","theme","paper","padding","spacing","display","overflow","flexDirection","ExpenseMode","state","render","classes","props","totalFixedExpense","totalVariableExpense","mapStateToProps","stateExpense","expense","expenses","length","variableExpense","filter","mode","fixedExpense","reduce","acc","vex","amount","fex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADJ;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,QAAQ,EAAE,MAHL;AAILC,IAAAA,aAAa,EAAE;AAJV;AADc,CAAL,CAApB;;AASA,MAAMC,WAAN,SAA0Bd,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCe,KADgC,GACxB,EADwB;AAAA;;AAEhCC,EAAAA,MAAM,GAAG;AAAA,UACEC,OADF,GACa,KAAKC,KADlB,CACED,OADF;AAEL,WACI,0CACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAwC,MAAA,KAAK,EAAC,SAA9C;AAAwD,MAAA,YAAY,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAKI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEA,OAAO,CAACT,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACmB,KAAKU,KAAL,CAAWC,iBAD9B,CADJ,CALJ,EAWI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEF,OAAO,CAACT,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACsB,KAAKU,KAAL,CAAWE,oBADjC,CADJ,CAXJ,CADJ;AAmBH;;AAvB+B;;AA0BpC,MAAMC,eAAe,GAAIN,KAAD,IAAW;AAC/B,QAAMO,YAAY,GAAGP,KAAK,CAACQ,OAAN,CAAcC,QAAnC;AACA,MAAIJ,oBAAJ,EAAyBD,iBAAzB;;AAEA,MAAIG,YAAY,CAACG,MAAb,GAAsB,CAA1B,EAA4B;AACxB,UAAMC,eAAe,GAAGJ,YAAY,CAACK,MAAb,CAAoBJ,OAAO,IAAIA,OAAO,CAACK,IAAR,IAAgB,UAA/C,CAAxB;AACA,UAAMC,YAAY,GAAGP,YAAY,CAACK,MAAb,CAAoBJ,OAAO,IAAIA,OAAO,CAACK,IAAR,IAAe,OAA9C,CAArB;AAEAR,IAAAA,oBAAoB,GAAGM,eAAe,CAACI,MAAhB,CAAuB,CAACC,GAAD,EAAKC,GAAL,KAAaD,GAAG,GAAGC,GAAG,CAACC,MAA9C,EAAqD,CAArD,CAAvB;AACAd,IAAAA,iBAAiB,GAAGU,YAAY,CAACC,MAAb,CAAoB,CAACC,GAAD,EAAKG,GAAL,KAAaH,GAAG,GAAGG,GAAG,CAACD,MAA3C,EAAkD,CAAlD,CAApB;AACH;;AACD,SAAO;AACHb,IAAAA,oBAAoB,EAAEA,oBADnB;AAEHD,IAAAA,iBAAiB,EAAGA;AAFjB,GAAP;AAIH,CAfD;;AAiBA,eAAed,OAAO,CAACgB,eAAD,CAAP,CAAyBjB,UAAU,CAACE,MAAD,CAAV,CAAmBQ,WAAnB,CAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {connect} from \"react-redux\";\n\n\nconst styles = theme => ({\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    }\n});\n\nclass ExpenseMode extends Component {\n    state = {  }\n    render() { \n        const {classes} = this.props;\n        return ( \n            <>\n                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                    Expense Mode\n                </Typography>\n            \n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                            Fixed : $ {this.props.totalFixedExpense}\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                            Variable : $ {this.props.totalVariableExpense}\n                    </Paper>\n                </Grid>\n            </>\n         );\n    }\n}\n\nconst mapStateToProps = (state) => { \n    const stateExpense = state.expense.expenses; \n    let totalVariableExpense,totalFixedExpense;\n    \n    if (stateExpense.length > 0){\n        const variableExpense = stateExpense.filter(expense => expense.mode == \"Variable\");\n        const fixedExpense = stateExpense.filter(expense => expense.mode== \"Fixed\");\n        \n        totalVariableExpense = variableExpense.reduce((acc,vex) => acc + vex.amount,0);\n        totalFixedExpense = fixedExpense.reduce((acc,fex) => acc + fex.amount,0);\n    }\n    return { \n        totalVariableExpense: totalVariableExpense,\n        totalFixedExpense : totalFixedExpense\n    }\n}\n \nexport default connect(mapStateToProps)(withStyles(styles)(ExpenseMode));"]},"metadata":{},"sourceType":"module"}