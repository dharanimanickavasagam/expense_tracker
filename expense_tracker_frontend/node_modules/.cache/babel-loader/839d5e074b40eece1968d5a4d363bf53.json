{"ast":null,"code":"var _jsxFileName = \"/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/src/components/chart/savings.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Typography from '@material-ui/core/Typography';\n\nclass Savings extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Typography, {\n      component: \"h2\",\n      variant: \"h6\",\n      color: \"primary\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Savings\"), React.createElement(Typography, {\n      component: \"center\",\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"$ \", this.props.totalSavings));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const stateIncome = state.income.income;\n  const stateExpense = state.expense.expenses;\n  let income, expense, savings;\n\n  if (stateExpense.length > 0) {\n    const expenseAmount = stateExpense.map(expense => expense.amount);\n    expense = expenseAmount.reduce((acc, inc) => acc + inc);\n  }\n\n  if (stateIncome.length > 0) {\n    const incomeMoney = stateIncome.map(inc => inc.income);\n    income = incomeMoney.reduce((acc, inc) => acc + inc);\n  }\n\n  return {\n    totalSavings: income - expense\n  };\n};\n\nexport default connect(mapStateToProps)(Savings);","map":{"version":3,"sources":["/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/src/components/chart/savings.jsx"],"names":["React","Component","connect","Typography","Savings","state","render","props","totalSavings","mapStateToProps","stateIncome","income","stateExpense","expense","expenses","savings","length","expenseAmount","map","amount","reduce","acc","inc","incomeMoney"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BI,KAD4B,GACpB,EADoB;AAAA;;AAE5BC,EAAAA,MAAM,GAAG;AACL,WACI,0CACA,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAwC,MAAA,KAAK,EAAC,SAA9C;AAAwD,MAAA,YAAY,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAKA,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,QAAtB;AAA+B,MAAA,OAAO,EAAC,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,KAAKC,KAAL,CAAWC,YADd,CALA,CADJ;AAWH;;AAd2B;;AAiBhC,MAAMC,eAAe,GAAIJ,KAAD,IAAW;AAC/B,QAAMK,WAAW,GAAGL,KAAK,CAACM,MAAN,CAAaA,MAAjC;AACA,QAAMC,YAAY,GAAGP,KAAK,CAACQ,OAAN,CAAcC,QAAnC;AACA,MAAIH,MAAJ,EAAWE,OAAX,EAAmBE,OAAnB;;AAEA,MAAIH,YAAY,CAACI,MAAb,GAAsB,CAA1B,EAA4B;AACxB,UAAMC,aAAa,GAAGL,YAAY,CAACM,GAAb,CAAiBL,OAAO,IAAIA,OAAO,CAACM,MAApC,CAAtB;AACAN,IAAAA,OAAO,GAAGI,aAAa,CAACG,MAAd,CAAqB,CAACC,GAAD,EAAKC,GAAL,KAAaD,GAAG,GAAGC,GAAxC,CAAV;AACH;;AAED,MAAIZ,WAAW,CAACM,MAAZ,GAAqB,CAAzB,EAA2B;AACvB,UAAMO,WAAW,GAAGb,WAAW,CAACQ,GAAZ,CAAgBI,GAAG,IAAIA,GAAG,CAACX,MAA3B,CAApB;AACAA,IAAAA,MAAM,GAAGY,WAAW,CAACH,MAAZ,CAAmB,CAACC,GAAD,EAAKC,GAAL,KAAaD,GAAG,GAAGC,GAAtC,CAAT;AACH;;AAED,SAAO;AACHd,IAAAA,YAAY,EAAGG,MAAM,GAAGE;AADrB,GAAP;AAGH,CAlBD;;AAoBA,eAAeX,OAAO,CAACO,eAAD,CAAP,CAAyBL,OAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport Typography from '@material-ui/core/Typography';\n\nclass Savings extends Component {\n    state = {  }\n    render() { \n        return ( \n            <>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                Savings\n            </Typography>\n   \n            <Typography component=\"center\" variant=\"h4\">\n            $ {this.props.totalSavings}\n            </Typography>\n            </>\n         );\n    }\n}\n\nconst mapStateToProps = (state) => { \n    const stateIncome = state.income.income;\n    const stateExpense = state.expense.expenses; \n    let income,expense,savings;\n    \n    if (stateExpense.length > 0){\n        const expenseAmount = stateExpense.map(expense => expense.amount)\n        expense = expenseAmount.reduce((acc,inc) => acc + inc);\n    }\n\n    if (stateIncome.length > 0){\n        const incomeMoney = stateIncome.map(inc => inc.income)\n        income = incomeMoney.reduce((acc,inc) => acc + inc);\n    }\n  \n    return { \n        totalSavings : income - expense\n    }\n}\n \nexport default connect(mapStateToProps)(Savings);"]},"metadata":{},"sourceType":"module"}