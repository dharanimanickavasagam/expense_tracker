{"ast":null,"code":"import _defineProperty from \"/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/src/components/materialExpenseTable.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { connect } from \"react-redux\";\nimport { addExpense, deleteExpense, updateExpense, getExpense } from \"../actions/expense\";\nimport { getExpenseType } from \"./../actions/expenseType\";\nimport _ from \"lodash\";\n\nconst MaterialExpenseTable = props => {\n  const data = props.expenses;\n  const lookUpType = Object.assign({}, ...props.expenseTypes.map(key => ({\n    [key]: key\n  })));\n  const columns = [{\n    title: \"Date\",\n    field: \"date\",\n    type: \"date\"\n  }, {\n    title: \"Description\",\n    field: \"name\"\n  }, {\n    title: \"Type\",\n    field: \"type\",\n    lookup: lookUpType\n  }, {\n    title: \"Mode\",\n    field: \"mode\",\n    lookup: {\n      Fixed: \"Fixed\",\n      Variable: \"Variable\"\n    }\n  }, {\n    title: \"Amount\",\n    field: \"amount\",\n    type: \"numeric\"\n  }, {\n    title: \"Notes\",\n    field: \"notes\"\n  }];\n  useEffect(() => {\n    const filter = data.map(datum => {\n      const del = _.omit(datum, [\"tableData\"]);\n\n      return del;\n    });\n    setState({\n      columns,\n      data: filter\n    });\n  }, [data, props.expenses, props.expenseTypes]);\n\n  const _useState = useState({\n    columns,\n    data\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  return React.createElement(MaterialTable, {\n    style: {\n      margin: \"10px\"\n    },\n    title: \"Expenses\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          data[data.indexOf(oldData)] = newData;\n\n          const updateData = _.omit(newData, \"tableData\");\n\n          setState(_objectSpread({}, state, {\n            data\n          }));\n          props.updateExpense(updateData);\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          data.splice(data.indexOf(oldData), 1);\n          setState(_objectSpread({}, state, {\n            data\n          }));\n          props.deleteExpense(oldData._id);\n        }, 600);\n      })\n    },\n    options: {\n      headerStyle: {\n        backgroundColor: '#3f51b5',\n        color: '#FFF'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = state => {\n  const expenseTypes = state.expenseType.expenseTypes;\n  const filteredExpenseTypeNames = expenseTypes.map(expenseType => expenseType.name);\n  return {\n    expenses: state.expense.expenses,\n    expenseTypes: filteredExpenseTypeNames\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getExpenseType: dispatch(getExpenseType()),\n    getExpense: dispatch(getExpense()),\n    addExpense: expense => dispatch(addExpense(expense)),\n    deleteExpense: expense => dispatch(deleteExpense(expense)),\n    updateExpense: expense => dispatch(updateExpense(expense))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialExpenseTable);","map":{"version":3,"sources":["/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/src/components/materialExpenseTable.jsx"],"names":["React","useState","useEffect","MaterialTable","connect","addExpense","deleteExpense","updateExpense","getExpense","getExpenseType","_","MaterialExpenseTable","props","data","expenses","lookUpType","Object","assign","expenseTypes","map","key","columns","title","field","type","lookup","Fixed","Variable","filter","datum","del","omit","setState","state","margin","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","indexOf","updateData","onRowDelete","splice","_id","headerStyle","backgroundColor","color","mapStateToProps","expenseType","filteredExpenseTypeNames","name","expense","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { connect } from \"react-redux\";\nimport {\n\taddExpense,\n\tdeleteExpense,\n\tupdateExpense,\n\tgetExpense\n} from \"../actions/expense\";\nimport { getExpenseType } from \"./../actions/expenseType\";\nimport _ from \"lodash\";\n\nconst MaterialExpenseTable = props => {\n\tconst data = props.expenses;\n\tconst lookUpType = Object.assign(\n\t\t{},\n\t\t...props.expenseTypes.map(key => ({ [key]: key }))\n\t);\n\n\n\tconst columns = [\n\t\t{ title: \"Date\", field: \"date\", type: \"date\" },\n\t\t{ title: \"Description\", field: \"name\" },\n\t\t{ title: \"Type\", field: \"type\", lookup : lookUpType},\n\t\t{\n\t\t\ttitle: \"Mode\",\n\t\t\tfield: \"mode\",\n\t\t\tlookup: { Fixed: \"Fixed\", Variable: \"Variable\" }\n\t\t},\n\t\t{ title: \"Amount\", field: \"amount\", type: \"numeric\" },\n\t\t{ title: \"Notes\", field: \"notes\" }\n\t];\n\n\tuseEffect(() => {\n\t\t\n\t\tconst filter = data.map(datum => {\n\t\t\tconst del = _.omit(datum, [\"tableData\"]);\n\t\t\treturn del;\n\t\t});\n\t\tsetState({ columns, data: filter });\n\t}, [data, props.expenses, props.expenseTypes]);\n\n\tconst [state, setState] = useState({\n\t\tcolumns,\n\t\tdata\n\t});\n\n\treturn (\n\t\t\n\n\t\t<MaterialTable\n\t\t\tstyle={{ margin: \"10px\" }}\n\t\t\ttitle=\"Expenses\"\n\t\t\tcolumns={state.columns}\n\t\t\tdata={state.data}\n\t\t\teditable={{\n\t\t\t\tonRowUpdate: (newData, oldData) =>\n\t\t\t\t\tnew Promise(resolve => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\tconst data = [...state.data];\n\t\t\t\t\t\t\tdata[data.indexOf(oldData)] = newData;\n\t\t\t\t\t\t\tconst updateData = _.omit(newData, \"tableData\");\n\t\t\t\t\t\t\tsetState({ ...state, data });\n\t\t\t\t\t\t\tprops.updateExpense(updateData);\n\t\t\t\t\t\t}, 600);\n\t\t\t\t\t}),\n\n\t\t\t\tonRowDelete: oldData =>\n\t\t\t\t\tnew Promise(resolve => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\tconst data = [...state.data];\n\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\n\t\t\t\t\t\t\tsetState({ ...state, data });\n\t\t\t\t\t\t\tprops.deleteExpense(oldData._id);\n\t\t\t\t\t\t}, 600);\n\t\t\t\t\t})\n\t\t\t}}\n\t\t\toptions={{\n\t\t\t\theaderStyle: {\n\t\t\t\t  backgroundColor: '#3f51b5',\n\t\t\t\t  color: '#FFF'\n\t\t\t\t}\n\t\t\t  }}\n\t\t/>\n\t);\n};\n\nconst mapStateToProps = state => {\n\tconst expenseTypes = state.expenseType.expenseTypes;\n\tconst filteredExpenseTypeNames = expenseTypes.map(\n\t\texpenseType => expenseType.name\n\t);\n\treturn {\n\t\texpenses: state.expense.expenses,\n\t\texpenseTypes: filteredExpenseTypeNames\n\t};\n};\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tgetExpenseType: dispatch(getExpenseType()),\n\t\tgetExpense: dispatch(getExpense()),\n\t\taddExpense: expense => dispatch(addExpense(expense)),\n\t\tdeleteExpense: expense => dispatch(deleteExpense(expense)),\n\t\tupdateExpense: expense => dispatch(updateExpense(expense))\n\t};\n};\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(MaterialExpenseTable);\n"]},"metadata":{},"sourceType":"module"}