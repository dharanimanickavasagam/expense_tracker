{"ast":null,"code":"import _defineProperty from \"/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_EXPENSE_TYPE, ADD_EXPENSE_TYPE, UPDATE_EXPENSE_TYPE, DELETE_EXPENSE_TYPE } from \"../constants/constants\";\nimport _ from \"lodash\"; //pure function\n\nconst initialState = {\n  expenseTypes: []\n};\n\nconst expenseType = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_EXPENSE_TYPE:\n      {\n        if (_.isEqual(action.payload, state.expenseTypes)) {\n          return Object.assign({}, state, {\n            expenseTypes: state.expenseTypes\n          });\n        } else {\n          return Object.assign({}, state, {\n            expenseTypes: state.expenseTypes.concat(action.payload)\n          });\n        }\n      }\n\n    case ADD_EXPENSE_TYPE:\n      {\n        return Object.assign({}, state, {\n          expenseTypes: state.expenseTypes.concat(_objectSpread({}, action.payload))\n        });\n      }\n\n    case UPDATE_EXPENSE_TYPE:\n      {\n        const _action$payload = action.payload,\n              name = _action$payload.name,\n              need = _action$payload.need,\n              _id = _action$payload._id;\n        return _objectSpread({}, state, {\n          expenseTypes: state.expenseTypes.map(expenseType => expenseType._id === _id ? _objectSpread({}, expenseType, {\n            name,\n            need,\n            _id\n          }) : expenseType)\n        });\n      }\n\n    case DELETE_EXPENSE_TYPE:\n      {\n        const toBeDeletedID = action.payload._id;\n        return _objectSpread({}, state, {\n          expenseTypes: state.expenseTypes.filter(expenseType => expenseType._id !== toBeDeletedID)\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default expenseType;","map":{"version":3,"sources":["/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/src/reducers/expenseType.js"],"names":["GET_EXPENSE_TYPE","ADD_EXPENSE_TYPE","UPDATE_EXPENSE_TYPE","DELETE_EXPENSE_TYPE","_","initialState","expenseTypes","expenseType","state","action","type","isEqual","payload","Object","assign","concat","name","need","_id","map","toBeDeletedID","filter"],"mappings":";;;;;;AAAA,SACEA,gBADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,mBAJF,QAKO,wBALP;AAMA,OAAOC,CAAP,MAAc,QAAd,C,CAGA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE;AADK,CAArB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,gBAAL;AAAuB;AAErB,YAAII,CAAC,CAACO,OAAF,CAAUF,MAAM,CAACG,OAAjB,EAA0BJ,KAAK,CAACF,YAAhC,CAAJ,EAAmD;AACjD,iBAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BF,YAAAA,YAAY,EAAEE,KAAK,CAACF;AADU,WAAzB,CAAP;AAGD,SAJD,MAIO;AACL,iBAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BF,YAAAA,YAAY,EAAEE,KAAK,CAACF,YAAN,CAAmBS,MAAnB,CAA0BN,MAAM,CAACG,OAAjC;AADgB,WAAzB,CAAP;AAGD;AACF;;AAED,SAAKX,gBAAL;AAAuB;AAErB,eAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BF,UAAAA,YAAY,EAAEE,KAAK,CAACF,YAAN,CAAmBS,MAAnB,mBACTN,MAAM,CAACG,OADE;AADgB,SAAzB,CAAP;AAKD;;AAED,SAAKV,mBAAL;AAA0B;AAAA,gCAMpBO,MAAM,CAACG,OANa;AAAA,cAGtBI,IAHsB,mBAGtBA,IAHsB;AAAA,cAItBC,IAJsB,mBAItBA,IAJsB;AAAA,cAKtBC,GALsB,mBAKtBA,GALsB;AASxB,iCACKV,KADL;AAEEF,UAAAA,YAAY,EAAEE,KAAK,CAACF,YAAN,CAAmBa,GAAnB,CAAwBZ,WAAD,IACnCA,WAAW,CAACW,GAAZ,KAAoBA,GAApB,qBACOX,WADP;AAEIS,YAAAA,IAFJ;AAGIC,YAAAA,IAHJ;AAGSC,YAAAA;AAHT,eAIMX,WALM;AAFhB;AAUD;;AAED,SAAKJ,mBAAL;AAA0B;AACxB,cAAMiB,aAAa,GAAGX,MAAM,CAACG,OAAP,CAAeM,GAArC;AACA,iCACKV,KADL;AAEEF,UAAAA,YAAY,EAAEE,KAAK,CAACF,YAAN,CAAmBe,MAAnB,CACZd,WAAW,IAAIA,WAAW,CAACW,GAAZ,KAAoBE,aADvB;AAFhB;AAMD;;AAED;AACE,aAAOZ,KAAP;AAvDJ;AAyDD,CA1DD;;AA4DA,eAAeD,WAAf","sourcesContent":["import {\n  GET_EXPENSE_TYPE,\n  ADD_EXPENSE_TYPE,\n  UPDATE_EXPENSE_TYPE,\n  DELETE_EXPENSE_TYPE\n} from \"../constants/constants\";\nimport _ from \"lodash\";\n\n\n//pure function\nconst initialState = {\n  expenseTypes: []\n};\n\nconst expenseType = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_EXPENSE_TYPE: {\n\n      if (_.isEqual(action.payload, state.expenseTypes)) {\n        return Object.assign({}, state, {\n          expenseTypes: state.expenseTypes\n        });\n      } else {\n        return Object.assign({}, state, {\n          expenseTypes: state.expenseTypes.concat(action.payload)\n        });\n      }\n    }\n\n    case ADD_EXPENSE_TYPE: {\n\n      return Object.assign({}, state, {\n        expenseTypes: state.expenseTypes.concat({\n          ...action.payload,\n        })\n      });\n    }\n\n    case UPDATE_EXPENSE_TYPE: {\n\n      const {\n        name,\n        need,\n        _id\n      } = action.payload;\n      \n\n      return {\n        ...state,\n        expenseTypes: state.expenseTypes.map((expenseType) =>\n          expenseType._id === _id ? {\n              ...expenseType,\n              name,\n              need,_id\n            } : expenseType\n        )\n      };\n    }\n\n    case DELETE_EXPENSE_TYPE: {\n      const toBeDeletedID = action.payload._id;\n      return {\n        ...state,\n        expenseTypes: state.expenseTypes.filter(\n          expenseType => expenseType._id !== toBeDeletedID\n        )\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default expenseType;"]},"metadata":{},"sourceType":"module"}