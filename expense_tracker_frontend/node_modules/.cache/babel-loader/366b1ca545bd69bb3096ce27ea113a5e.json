{"ast":null,"code":"import _defineProperty from \"/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_INCOME, DELETE_INCOME, GET_INCOME, UPDATE_INCOME } from \"../constants/constants\";\nimport _ from \"lodash\";\nconst initialState = {\n  income: []\n};\n\nconst income = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_INCOME:\n      const stateIncomeWithoutTableData = state.income.map(inc => _.omit(inc, \"tableData\"));\n\n      if (_.isEqual(action.payload, stateIncomeWithoutTableData)) {\n        return Object.assign({}, state, {\n          income: state.income\n        });\n      } else {\n        return Object.assign({}, state, {\n          income: state.income.concat(action.payload)\n        });\n      }\n\n    case ADD_INCOME:\n      {\n        return Object.assign({}, state, {\n          income: state.income.concat(_objectSpread({}, action.payload))\n        });\n      }\n\n    case DELETE_INCOME:\n      const toBeDeletedID = action.payload._id;\n      return _objectSpread({}, state, {\n        income: state.income.filter(inc => inc._id !== toBeDeletedID)\n      });\n\n    case UPDATE_INCOME:\n      {\n        const _action$payload = action.payload,\n              date = _action$payload.date,\n              payer = _action$payload.payer,\n              income = _action$payload.income,\n              notes = _action$payload.notes,\n              _id = _action$payload._id;\n        return _objectSpread({}, state, {\n          income: state.income.map(inc => inc._id === _id ? _objectSpread({}, income, {\n            _id,\n            date,\n            payer,\n            income,\n            notes\n          }) : income)\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default income;","map":{"version":3,"sources":["/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/src/reducers/income.js"],"names":["ADD_INCOME","DELETE_INCOME","GET_INCOME","UPDATE_INCOME","_","initialState","income","state","action","type","stateIncomeWithoutTableData","map","inc","omit","isEqual","payload","Object","assign","concat","toBeDeletedID","_id","filter","date","payer","notes"],"mappings":";;;;;;AAAA,SACIA,UADJ,EAEIC,aAFJ,EAGIC,UAHJ,EAIIC,aAJJ,QAKO,wBALP;AAMA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AADS,CAArB;;AAIA,MAAMA,MAAM,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKP,UAAL;AACI,YAAMQ,2BAA2B,GAAGH,KAAK,CAACD,MAAN,CAAaK,GAAb,CAAiBC,GAAG,IAAIR,CAAC,CAACS,IAAF,CAAOD,GAAP,EAAY,WAAZ,CAAxB,CAApC;;AAEA,UAAIR,CAAC,CAACU,OAAF,CAAUN,MAAM,CAACO,OAAjB,EAA0BL,2BAA1B,CAAJ,EAA4D;AACxD,eAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAC5BD,UAAAA,MAAM,EAAEC,KAAK,CAACD;AADc,SAAzB,CAAP;AAGH,OAJD,MAIO;AACH,eAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAC5BD,UAAAA,MAAM,EAAEC,KAAK,CAACD,MAAN,CAAaY,MAAb,CAAoBV,MAAM,CAACO,OAA3B;AADoB,SAAzB,CAAP;AAGH;;AAED,SAAKf,UAAL;AAAiB;AAEb,eAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAC5BD,UAAAA,MAAM,EAAEC,KAAK,CAACD,MAAN,CAAaY,MAAb,mBACDV,MAAM,CAACO,OADN;AADoB,SAAzB,CAAP;AAKH;;AAED,SAAKd,aAAL;AAEI,YAAMkB,aAAa,GAAGX,MAAM,CAACO,OAAP,CAAeK,GAArC;AACA,+BACOb,KADP;AAEID,QAAAA,MAAM,EAAEC,KAAK,CAACD,MAAN,CAAae,MAAb,CAAoBT,GAAG,IAAIA,GAAG,CAACQ,GAAJ,KAAYD,aAAvC;AAFZ;;AAKJ,SAAKhB,aAAL;AAAmB;AAAA,gCAGXK,MAAM,CAACO,OAHI;AAAA,cAEXO,IAFW,mBAEXA,IAFW;AAAA,cAELC,KAFK,mBAELA,KAFK;AAAA,cAEEjB,MAFF,mBAEEA,MAFF;AAAA,cAEUkB,KAFV,mBAEUA,KAFV;AAAA,cAEiBJ,GAFjB,mBAEiBA,GAFjB;AAIf,iCACOb,KADP;AAEID,UAAAA,MAAM,EAAEC,KAAK,CAACD,MAAN,CAAaK,GAAb,CAAkBC,GAAD,IACrBA,GAAG,CAACQ,GAAJ,KAAYA,GAAZ,qBACOd,MADP;AAEIc,YAAAA,GAFJ;AAGIE,YAAAA,IAHJ;AAIIC,YAAAA,KAJJ;AAKIjB,YAAAA,MALJ;AAMIkB,YAAAA;AANJ,eAOIlB,MARA;AAFZ;AAaH;;AAED;AACI,aAAOC,KAAP;AApDZ;AAsDH,CAvDD;;AAyDA,eAAeD,MAAf","sourcesContent":["import {\n    ADD_INCOME,\n    DELETE_INCOME,\n    GET_INCOME,\n    UPDATE_INCOME\n} from \"../constants/constants\";\nimport _ from \"lodash\";\n\nconst initialState = {\n    income: []\n}\n\nconst income = (state = initialState, action) => {\n    switch (action.type) {\n\n        case GET_INCOME:\n            const stateIncomeWithoutTableData = state.income.map(inc => _.omit(inc, \"tableData\"));\n            \n            if (_.isEqual(action.payload, stateIncomeWithoutTableData)) {\n                return Object.assign({}, state, {\n                    income: state.income\n                });\n            } else {\n                return Object.assign({}, state, {\n                    income: state.income.concat(action.payload)\n                });\n            }\n\n            case ADD_INCOME: {\n          \n                return Object.assign({}, state, {\n                    income: state.income.concat({\n                        ...action.payload\n                    })\n                })\n            }\n\n            case DELETE_INCOME:\n                   \n                const toBeDeletedID = action.payload._id;\n                return {\n                    ...state,\n                    income: state.income.filter(inc => inc._id !== toBeDeletedID)\n                };\n\n            case UPDATE_INCOME:{\n                const {\n                    date, payer, income, notes, _id\n                } = action.payload;\n                return {\n                    ...state,\n                    income: state.income.map((inc) =>\n                        inc._id === _id ? {\n                            ...income,\n                            _id,\n                            date,\n                            payer,\n                            income,\n                            notes\n                        } : income\n                    )\n                };\n            }\n            \n            default:\n                return state;\n    }\n}\n\nexport default income;"]},"metadata":{},"sourceType":"module"}