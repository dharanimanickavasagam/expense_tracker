{"ast":null,"code":"var _jsxFileName = \"/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/src/components/materialIncomeTable.jsx\";\nimport React, { Component } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { connect } from \"react-redux\";\nimport { getIncome, addIncome, deleteIncome, updateIncome } from \"../actions/income\";\nimport _ from \"lodash\";\nimport Button from '@material-ui/core/Button';\nimport AddIncome from \"./addIncome\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from '@material-ui/core/Container';\nimport LeftAnchorDrawer from \"./common/styledDrawer\";\n\nclass MaterialIncomeTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columns: [{\n        title: \"Date\",\n        field: \"date\",\n        type: \"date\"\n      }, {\n        title: \"Payer\",\n        field: \"payer\"\n      }, {\n        title: \"Income\",\n        field: \"income\",\n        type: \"numeric\"\n      }, {\n        title: \"Notes\",\n        field: \"notes\"\n      }],\n      data: [],\n      incomeDrawToggle: false\n    };\n\n    this.handleToggle = () => {\n      const drawToggle = !this.state.incomeDrawToggle;\n      this.setState({\n        incomeDrawToggle: drawToggle\n      });\n    };\n\n    this.getTableData = () => {\n      const data = this.props.income;\n      this.setState({\n        data\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.getTableData();\n    };\n\n    this.componentDidUpdate = prevProps => {\n      if (this.props.income !== prevProps.income) {\n        this.getTableData();\n        getIncome();\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      maxWidth: \"lg\",\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        height: \"90vh\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(MaterialTable, {\n      title: \"Income\",\n      columns: this.state.columns,\n      data: this.state.data,\n      editable: {\n        onRowUpdate: (newData, oldData) => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = [...this.state.data];\n            data[data.indexOf(oldData)] = newData;\n            this.setState({\n              data\n            });\n\n            const updateData = _.omit(newData, \"tableData\");\n\n            this.props.updateIncome(updateData);\n          }, 600);\n        }),\n        onRowDelete: oldData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = [...this.state.data];\n            data.splice(data.indexOf(oldData), 1);\n            this.setState({\n              data\n            });\n            this.props.deleteIncome(oldData._id);\n          }, 600);\n        })\n      },\n      components: {\n        Toolbar: props => React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(MTableToolbar, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        })), React.createElement(Button, {\n          color: \"secondary\",\n          onClick: () => this.handleToggle(\"incomeDrawToggle\"),\n          style: {\n            padding: '10px 10px',\n            marginRight: 5,\n            diplay: \"flex\",\n            justifyContent: \"flex-end\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Add Income \"))\n      },\n      options: {\n        headerStyle: {\n          backgroundColor: '#3f51b5',\n          color: '#FFF'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })))), React.createElement(LeftAnchorDrawer, {\n      open: this.state.incomeDrawToggle,\n      component: React.createElement(AddIncome, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }),\n      label: \"Toggle Income\",\n      onClick: () => this.handleToggle(\"incomeDrawToggle\"),\n      buttonName: \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    income: state.income.income\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getIncome: dispatch(getIncome()),\n    addIncome: income => dispatch(addIncome(income)),\n    deleteIncome: incomeID => dispatch(deleteIncome(incomeID)),\n    updateIncome: income => dispatch(updateIncome(income))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialIncomeTable);","map":{"version":3,"sources":["/Users/karthik-dhaaru/Documents/Workspace/Dharani/expense_tracker/expense_tracker_frontend/src/components/materialIncomeTable.jsx"],"names":["React","Component","MaterialTable","MTableToolbar","connect","getIncome","addIncome","deleteIncome","updateIncome","_","Button","AddIncome","Paper","Grid","Container","LeftAnchorDrawer","MaterialIncomeTable","state","columns","title","field","type","data","incomeDrawToggle","handleToggle","drawToggle","setState","getTableData","props","income","componentDidMount","componentDidUpdate","prevProps","render","display","alignItems","height","justifyContent","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","indexOf","updateData","omit","onRowDelete","splice","_id","Toolbar","padding","marginRight","diplay","headerStyle","backgroundColor","color","mapStateToProps","mapDispatchToProps","dispatch","incomeID"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport MaterialTable, {MTableToolbar} from \"material-table\";\nimport { connect } from \"react-redux\";\nimport {\n\tgetIncome,\n\taddIncome,\n\tdeleteIncome,\n\tupdateIncome\n} from \"../actions/income\";\nimport _ from \"lodash\"\nimport Button from '@material-ui/core/Button';\nimport AddIncome from \"./addIncome\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from '@material-ui/core/Container';\n\nimport LeftAnchorDrawer from \"./common/styledDrawer\";\n\nclass MaterialIncomeTable extends Component {\n\tstate = {\n\t\tcolumns: [\n\t\t\t{ title: \"Date\", field: \"date\", type: \"date\" },\n\t\t\t{ title: \"Payer\", field: \"payer\" },\n\t\t\t{ title: \"Income\", field: \"income\", type: \"numeric\" },\n\t\t\t{ title: \"Notes\", field: \"notes\" }\n\t\t],\n\t\tdata: [],\n\t\tincomeDrawToggle: false\n\t};\n\n\n\n\thandleToggle = () => {\n\t\tconst drawToggle = !this.state.incomeDrawToggle;\n\t\tthis.setState({ incomeDrawToggle: drawToggle });\n\t};\n\n\tgetTableData = () => {\n\t\tconst data = this.props.income;\n\t\tthis.setState({ data });\n\t};\n\n\tcomponentDidMount = () => {\n\t\tthis.getTableData();\n\t};\n\n\tcomponentDidUpdate = prevProps => {\n\t\tif (this.props.income !== prevProps.income) {\n\t\t\tthis.getTableData();\n\t\t\tgetIncome();\n\t\t}\n\t};\n\t \n\trender() {\n\t\t\n\t\treturn (\n\t\t\t<Container maxWidth=\"lg\" style={{display : \"flex\", alignItems :\"center\", \n\t\t\t\t\theight : \"90vh\",justifyContent : \"center\"}}>\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Paper >\n\t\t\t\t\t\t\t<MaterialTable\n\t\t\t\t\t\t\t\ttitle=\"Income\"\n\t\t\t\t\t\t\t\tcolumns={this.state.columns}\n\t\t\t\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\t\t\t\teditable={{\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tonRowUpdate: (newData, oldData) =>\n\t\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\n\t\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...this.state.data];\n\t\t\t\t\t\t\t\t\t\t\t\tdata[data.indexOf(oldData)] = newData;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ data });\n\t\t\t\t\t\t\t\t\t\t\t\tconst updateData = _.omit(newData, \"tableData\");\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.updateIncome(updateData);\n\t\t\t\t\t\t\t\t\t\t\t}, 600);\n\t\t\t\t\t\t\t\t\t\t}),\n\n\t\t\t\t\t\t\t\t\t\tonRowDelete: oldData =>\n\t\t\t\t\t\t\t\t\t\tnew Promise(resolve => {\n\t\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t\t\tconst data = [...this.state.data];\n\t\t\t\t\t\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({data})\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.deleteIncome(oldData._id);\n\t\t\t\t\t\t\t\t\t\t\t}, 600);\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}}\n\n\t\t\t\t\t\tcomponents={{\n\t\t\t\t\t\t\tToolbar: props => (\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<MTableToolbar {...props} />\n\t\t\t\t\t\t\t\t<Button  color=\"secondary\" onClick={() => this.handleToggle(\"incomeDrawToggle\")}\n\t\t\t\t\t\t\t\t\tstyle={{padding: '10px 10px',marginRight: 5, diplay : \"flex\", \n\t\t\t\t\t\t\t\t\t\t\tjustifyContent : \"flex-end\"}}> \n\t\t\t\t\t\t\t\t\tAdd Income </Button>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}\n\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\theaderStyle: {\n\t\t\t\t\t\t\tbackgroundColor: '#3f51b5',\n\t\t\t\t\t\t\tcolor: '#FFF'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\t\t\t\t\t \n\t\t\t\t\t/>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\n\t\t<LeftAnchorDrawer  open={this.state.incomeDrawToggle} \n\t\t\tcomponent={< AddIncome />} label={\"Toggle Income\"} \n\t\t\tonClick={() => this.handleToggle(\"incomeDrawToggle\")}\n\t\t\tbuttonName={\"Close\"} />\n\n\t</Container>\n\t)}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tincome: state.income.income\n\t};\n};\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tgetIncome: dispatch(getIncome()),\n\t\taddIncome: income => dispatch(addIncome(income)),\n\t\tdeleteIncome: incomeID => dispatch(deleteIncome(incomeID)),\n\t\tupdateIncome: income => dispatch(updateIncome(income))\n\t};\n};\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(MaterialIncomeTable);\n"]},"metadata":{},"sourceType":"module"}